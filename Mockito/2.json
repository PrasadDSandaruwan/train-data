[
  {
    "id": 2749,
    "file_path": "src/org/mockito/internal/util/Timer.java",
    "start-bug-line": 3,
    "end-bug-line": 3,
    "bug": "",
    "fix": "import org.mockito.exceptions.Reporter;",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.mockito.internal.util; <extra_id_0> public class Timer { private final long durationMillis; private long startTime = -1; public Timer(long durationMillis) { this.durationMillis = durationMillis; }"
      },
      {
        "txt": "this.durationMillis = durationMillis; } public boolean isCounting() { assert startTime != -1; return System.currentTimeMillis() - startTime <= durationMillis; } public void start() { startTime = System.currentTimeMillis(); }"
      }
    ]
  },
  {
    "id": 2750,
    "file_path": "src/org/mockito/internal/util/Timer.java",
    "start-bug-line": 10,
    "end-bug-line": 10,
    "bug": "",
    "fix": "validateInput(durationMillis);",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.mockito.internal.util; public class Timer { private final long durationMillis; private long startTime = -1; public Timer(long durationMillis) { <extra_id_0> } public boolean isCounting() { assert startTime != -1; return System.currentTimeMillis() - startTime <= durationMillis; } public void start() {"
      },
      {
        "txt": "} public void start() { startTime = System.currentTimeMillis(); }"
      }
    ]
  },
  {
    "id": 2751,
    "file_path": "src/org/mockito/internal/util/Timer.java",
    "start-bug-line": 28,
    "end-bug-line": 28,
    "bug": "",
    "fix": "private void validateInput(long durationMillis) { if (durationMillis < 0) { new Reporter().cannotCreateTimerWithNegativeDurationTime(durationMillis); } }",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.mockito.internal.util; public class Timer { private final long durationMillis; private long startTime = -1; public Timer(long durationMillis) { this.durationMillis = durationMillis; }"
      },
      {
        "txt": "assert startTime != -1; return System.currentTimeMillis() - startTime <= durationMillis; } public void start() { startTime = System.currentTimeMillis(); } <extra_id_0>"
      }
    ]
  }
]