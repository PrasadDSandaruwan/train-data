[
  {
    "id": 2880,
    "file_path": "src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java",
    "start-bug-line": 48,
    "end-bug-line": 48,
    "bug": "return StringDescription.toString(m).equals(arg.toString());",
    "fix": "return StringDescription.toString(m).equals(arg == null? \"null\" : arg.toString());",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.mockito.internal.verification.argumentmatching; import java.util.LinkedList; import java.util.List; import org.hamcrest.Matcher; import org.hamcrest.StringDescription; import org.mockito.internal.matchers.ContainsExtraTypeInformation;"
      },
      {
        "txt": "@SuppressWarnings(\"unchecked\") public class ArgumentMatchingTool { public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers, Object[] arguments) { if (matchers.size() != arguments.length) { return new Integer[0]; } List<Integer> suspicious = new LinkedList<Integer>(); int i = 0; for (Matcher m : matchers) { if (m instanceof ContainsExtraTypeInformation"
      },
      {
        "txt": "&& !safelyMatches(m, arguments[i]) && toStringEquals(m, arguments[i]) && !((ContainsExtraTypeInformation) m).typeMatches(arguments[i])) { suspicious.add(i); } i++; } return suspicious.toArray(new Integer[0]); } private boolean safelyMatches(Matcher m, Object arg) {"
      },
      {
        "txt": "return m.matches(arg); } catch (Throwable t) { return false; } } private boolean toStringEquals(Matcher m, Object arg) { <extra_id_0> } }"
      }
    ]
  }
]