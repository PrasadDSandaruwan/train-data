[
  {
    "id": 55,
    "file_path": "source/org/jfree/chart/renderer/GrayPaintScale.java",
    "start-bug-line": 126,
    "end-bug-line": 126,
    "bug": "int g = (int) ((value - this.lowerBound) / (this.upperBound",
    "fix": "int g = (int) ((v - this.lowerBound) / (this.upperBound",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.jfree.chart.renderer; import java.awt.Color;"
      },
      {
        "txt": "import java.awt.Paint; import java.io.Serializable; import org.jfree.chart.util.PublicCloneable; public class GrayPaintScale implements PaintScale, PublicCloneable, Serializable { private double lowerBound; private double upperBound; public GrayPaintScale() { this(0.0, 1.0); }"
      },
      {
        "txt": "public GrayPaintScale(double lowerBound, double upperBound) { if (lowerBound >= upperBound) { throw new IllegalArgumentException( \"Requires lowerBound < upperBound.\"); } this.lowerBound = lowerBound; this.upperBound = upperBound; } public double getLowerBound() { return this.lowerBound;"
      },
      {
        "txt": "public double getUpperBound() { return this.upperBound; } public Paint getPaint(double value) { double v = Math.max(value, this.lowerBound); v = Math.min(v, this.upperBound); <extra_id_0> - this.lowerBound) * 255.0); return new Color(g, g, g); } public boolean equals(Object obj) { if (obj == this) { return true;"
      },
      {
        "txt": "if (obj == this) { return true; } if (!(obj instanceof GrayPaintScale)) { return false; } GrayPaintScale that = (GrayPaintScale) obj; if (this.lowerBound != that.lowerBound) { return false; }"
      },
      {
        "txt": "if (this.upperBound != that.upperBound) { return false; } return true; } public Object clone() throws CloneNotSupportedException { return super.clone(); }"
      }
    ]
  }
]