[
  {
    "id": 1371,
    "file_path": "src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationMap.java",
    "start-bug-line": 112,
    "end-bug-line": 112,
    "bug": "return (previous != null) && previous.equals(ann);",
    "fix": "return (previous == null) || !previous.equals(ann);",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package com.fasterxml.jackson.databind.introspect; import java.lang.annotation.Annotation; import java.util.*; import com.fasterxml.jackson.databind.util.Annotations;"
      },
      {
        "txt": "public final class AnnotationMap implements Annotations { protected HashMap<Class<? extends Annotation>,Annotation> _annotations; public AnnotationMap() { } private AnnotationMap(HashMap<Class<? extends Annotation>,Annotation> a) { _annotations = a; } @SuppressWarnings(\"unchecked\") @Override public <A extends Annotation> A get(Class<A> cls)"
      },
      {
        "txt": "{ if (_annotations == null) { return null; } return (A) _annotations.get(cls); } public Iterable<Annotation> annotations() { if (_annotations == null || _annotations.size() == 0) { return Collections.emptyList(); }"
      },
      {
        "txt": "return _annotations.values(); } public static AnnotationMap merge(AnnotationMap primary, AnnotationMap secondary) { if (primary == null || primary._annotations == null || primary._annotations.isEmpty()) { return secondary; } if (secondary == null || secondary._annotations == null || secondary._annotations.isEmpty()) { return primary; }"
      },
      {
        "txt": "HashMap<Class<? extends Annotation>,Annotation> annotations = new HashMap<Class<? extends Annotation>,Annotation>(); for (Annotation ann : secondary._annotations.values()) { annotations.put(ann.annotationType(), ann); } for (Annotation ann : primary._annotations.values()) { annotations.put(ann.annotationType(), ann); } return new AnnotationMap(annotations); }"
      },
      {
        "txt": "@Override public int size() { return (_annotations == null) ? 0 : _annotations.size(); } public boolean addIfNotPresent(Annotation ann) { if (_annotations == null || !_annotations.containsKey(ann.annotationType())) { _add(ann); return true; }"
      },
      {
        "txt": "return false; } public boolean add(Annotation ann) { return _add(ann); } @Override public String toString() { if (_annotations == null) { return \"[null]\"; }"
      },
      {
        "txt": "} protected final boolean _add(Annotation ann) { if (_annotations == null) { _annotations = new HashMap<Class<? extends Annotation>,Annotation>(); } Annotation previous = _annotations.put(ann.annotationType(), ann); <extra_id_0> } }"
      }
    ]
  }
]