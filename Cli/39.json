[
  {
    "id": 193,
    "file_path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
    "start-bug-line": 92,
    "end-bug-line": 92,
    "bug": "return createFile(str);",
    "fix": "return openFile(str);",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.apache.commons.cli; import java.io.File; import java.io.FileInputStream; import java.io.FileNotFoundException;"
      },
      {
        "txt": "import java.net.MalformedURLException; import java.net.URL; import java.util.Date; public class TypeHandler { public static Object createValue(final String str, final Object obj) throws ParseException { return createValue(str, (Class<?>) obj); } public static Object createValue(final String str, final Class<?> clazz) throws ParseException"
      },
      {
        "txt": "{ if (PatternOptionBuilder.STRING_VALUE == clazz) { return str; } else if (PatternOptionBuilder.OBJECT_VALUE == clazz) { return createObject(str); } else if (PatternOptionBuilder.NUMBER_VALUE == clazz)"
      },
      {
        "txt": "{ return createNumber(str); } else if (PatternOptionBuilder.DATE_VALUE == clazz) { return createDate(str); } else if (PatternOptionBuilder.CLASS_VALUE == clazz) { return createClass(str);"
      },
      {
        "txt": "else if (PatternOptionBuilder.FILE_VALUE == clazz) { return createFile(str); } else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz) { <extra_id_0> } else if (PatternOptionBuilder.FILES_VALUE == clazz) { return createFiles(str); } else if (PatternOptionBuilder.URL_VALUE == clazz)"
      },
      {
        "txt": "} else if (PatternOptionBuilder.URL_VALUE == clazz) { return createURL(str); } else { return null; } }"
      },
      {
        "txt": "public static Object createObject(final String classname) throws ParseException { Class<?> cl; try { cl = Class.forName(classname); } catch (final ClassNotFoundException cnfe) { throw new ParseException(\"Unable to find the class: \" + classname);"
      },
      {
        "txt": "} try { return cl.newInstance(); } catch (final Exception e) { throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname); } }"
      },
      {
        "txt": "public static Number createNumber(final String str) throws ParseException { try { if (str.indexOf('.') != -1) { return Double.valueOf(str); } return Long.valueOf(str); }"
      },
      {
        "txt": "catch (final NumberFormatException e) { throw new ParseException(e.getMessage()); } } public static Class<?> createClass(final String classname) throws ParseException { try { return Class.forName(classname);"
      },
      {
        "txt": "} catch (final ClassNotFoundException e) { throw new ParseException(\"Unable to find the class: \" + classname); } } public static Date createDate(final String str) { throw new UnsupportedOperationException(\"Not yet implemented\"); }"
      },
      {
        "txt": "public static URL createURL(final String str) throws ParseException { try { return new URL(str); } catch (final MalformedURLException e) { throw new ParseException(\"Unable to parse the URL: \" + str); }"
      },
      {
        "txt": "} public static File createFile(final String str) { return new File(str); } public static File[] createFiles(final String str) { throw new UnsupportedOperationException(\"Not yet implemented\"); }"
      }
    ]
  },
  {
    "id": 194,
    "file_path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
    "start-bug-line": 234,
    "end-bug-line": 234,
    "bug": "",
    "fix": "public static FileInputStream openFile(String str) throws ParseException { try { return new FileInputStream(str); } catch (FileNotFoundException e) { throw new ParseException(\"Unable to find file: \" + str); } }",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.apache.commons.cli; import java.io.File; import java.io.FileInputStream; import java.io.FileNotFoundException;"
      },
      {
        "txt": "import java.net.MalformedURLException; import java.net.URL; import java.util.Date; public class TypeHandler { public static Object createValue(final String str, final Object obj) throws ParseException { return createValue(str, (Class<?>) obj); } public static Object createValue(final String str, final Class<?> clazz) throws ParseException"
      },
      {
        "txt": "{ if (PatternOptionBuilder.STRING_VALUE == clazz) { return str; } else if (PatternOptionBuilder.OBJECT_VALUE == clazz) { return createObject(str); } else if (PatternOptionBuilder.NUMBER_VALUE == clazz)"
      },
      {
        "txt": "{ return createNumber(str); } else if (PatternOptionBuilder.DATE_VALUE == clazz) { return createDate(str); } else if (PatternOptionBuilder.CLASS_VALUE == clazz) { return createClass(str);"
      },
      {
        "txt": "} else if (PatternOptionBuilder.FILE_VALUE == clazz) { return createFile(str); } else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz) { return createFile(str); } else if (PatternOptionBuilder.FILES_VALUE == clazz)"
      },
      {
        "txt": "{ return createFiles(str); } else if (PatternOptionBuilder.URL_VALUE == clazz) { return createURL(str); } else { return null;"
      },
      {
        "txt": "} } public static Object createObject(final String classname) throws ParseException { Class<?> cl; try { cl = Class.forName(classname); } catch (final ClassNotFoundException cnfe)"
      },
      {
        "txt": "{ throw new ParseException(\"Unable to find the class: \" + classname); } try { return cl.newInstance(); } catch (final Exception e) { throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);"
      },
      {
        "txt": "} } public static Number createNumber(final String str) throws ParseException { try { if (str.indexOf('.') != -1) { return Double.valueOf(str); }"
      },
      {
        "txt": "return Long.valueOf(str); } catch (final NumberFormatException e) { throw new ParseException(e.getMessage()); } } public static Class<?> createClass(final String classname) throws ParseException { try"
      },
      {
        "txt": "{ return Class.forName(classname); } catch (final ClassNotFoundException e) { throw new ParseException(\"Unable to find the class: \" + classname); } } public static Date createDate(final String str) {"
      },
      {
        "txt": "throw new UnsupportedOperationException(\"Not yet implemented\"); } public static URL createURL(final String str) throws ParseException { try { return new URL(str); } catch (final MalformedURLException e) {"
      },
      {
        "txt": "} } public static File createFile(final String str) { return new File(str); } <extra_id_0> public static File[] createFiles(final String str) { throw new UnsupportedOperationException(\"Not yet implemented\"); } }"
      }
    ]
  }
]