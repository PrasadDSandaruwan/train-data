[
  {
    "id": 82,
    "file_path": "src/java/org/apache/commons/cli/TypeHandler.java",
    "start-bug-line": 161,
    "end-bug-line": 161,
    "bug": "return org.apache.commons.lang.math.NumberUtils.createNumber(str);",
    "fix": "if( str != null ) { if( str.indexOf('.') != -1 ) { return Double.valueOf(str); } else { return Long.valueOf(str); } }",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "import java.io.File; import java.net.MalformedURLException; import java.net.URL; import java.util.Date; public class TypeHandler { public static Object createValue(String str, Object obj) { return createValue(str, (Class) obj); } public static Object createValue(String str, Class clazz)"
      },
      {
        "txt": "{ if (PatternOptionBuilder.STRING_VALUE == clazz) { return str; } else if (PatternOptionBuilder.OBJECT_VALUE == clazz) { return createObject(str); } else if (PatternOptionBuilder.NUMBER_VALUE == clazz)"
      },
      {
        "txt": "{ return createNumber(str); } else if (PatternOptionBuilder.DATE_VALUE == clazz) { return createDate(str); } else if (PatternOptionBuilder.CLASS_VALUE == clazz) { return createClass(str);"
      },
      {
        "txt": "} else if (PatternOptionBuilder.FILE_VALUE == clazz) { return createFile(str); } else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz) { return createFile(str); } else if (PatternOptionBuilder.FILES_VALUE == clazz)"
      },
      {
        "txt": "{ return createFiles(str); } else if (PatternOptionBuilder.URL_VALUE == clazz) { return createURL(str); } else { return null;"
      },
      {
        "txt": "} } public static Object createObject(String str) { Class cl = null; try { cl = Class.forName(str); } catch (ClassNotFoundException cnfe)"
      },
      {
        "txt": "{ System.err.println(\"Unable to find: \" + str); return null; } Object instance = null; try { instance = cl.newInstance(); } catch (InstantiationException cnfe)"
      },
      {
        "txt": "{ System.err.println(\"InstantiationException; Unable to create: \" + str); return null; } catch (IllegalAccessException cnfe) { System.err.println(\"IllegalAccessException; Unable to create: \" + str); return null;"
      },
      {
        "txt": "return instance; } public static Number createNumber(String str) { try { <extra_id_0> } catch (NumberFormatException nfe) { System.err.println(nfe.getMessage()); } return null;"
      },
      {
        "txt": "} return null; } public static Class createClass(String str) { try { return Class.forName(str); } catch (ClassNotFoundException cnfe)"
      },
      {
        "txt": "{ System.err.println(\"Unable to find: \" + str); return null; } } public static Date createDate(String str) { Date date = null; if (date == null) {"
      },
      {
        "txt": "System.err.println(\"Unable to parse: \" + str); } return date; } public static URL createURL(String str) { try { return new URL(str); }"
      },
      {
        "txt": "catch (MalformedURLException mue) { System.err.println(\"Unable to parse: \" + str); return null; } } public static File createFile(String str) { return new File(str); }"
      },
      {
        "txt": "public static File[] createFiles(String str) { return null; }"
      }
    ]
  }
]