[
  {
    "id": 1895,
    "file_path": "src/main/java/org/jsoup/nodes/DocumentType.java",
    "start-bug-line": 4,
    "end-bug-line": 4,
    "bug": "",
    "fix": "import org.jsoup.helper.Validate;",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.jsoup.nodes; import org.jsoup.helper.StringUtil; <extra_id_0> public class DocumentType extends Node { public DocumentType(String name, String publicId, String systemId, String baseUri) { super(baseUri); attr(\"name\", name); attr(\"publicId\", publicId); attr(\"systemId\", systemId);"
      },
      {
        "txt": "attr(\"publicId\", publicId); attr(\"systemId\", systemId); } @Override public String nodeName() { return \"#doctype\"; } @Override void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) { accum.append(\"<!DOCTYPE html\");"
      },
      {
        "txt": "if (!StringUtil.isBlank(attr(\"publicId\"))) accum.append(\" PUBLIC \\\"\").append(attr(\"publicId\")).append(\"\\\"\"); if (!StringUtil.isBlank(attr(\"systemId\"))) accum.append(' ').append(attr(\"systemId\")).append(\"\\\"\"); accum.append('>'); } @Override void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) { }"
      }
    ]
  },
  {
    "id": 1896,
    "file_path": "src/main/java/org/jsoup/nodes/DocumentType.java",
    "start-bug-line": 21,
    "end-bug-line": 21,
    "bug": "",
    "fix": "Validate.notEmpty(name);",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.jsoup.nodes; import org.jsoup.helper.StringUtil; public class DocumentType extends Node { public DocumentType(String name, String publicId, String systemId, String baseUri) { super(baseUri); <extra_id_0> attr(\"publicId\", publicId); attr(\"systemId\", systemId); } @Override public String nodeName() { return \"#doctype\";"
      },
      {
        "txt": "public String nodeName() { return \"#doctype\"; } @Override void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) { accum.append(\"<!DOCTYPE html\"); if (!StringUtil.isBlank(attr(\"publicId\"))) accum.append(\" PUBLIC \\\"\").append(attr(\"publicId\")).append(\"\\\"\"); if (!StringUtil.isBlank(attr(\"systemId\"))) accum.append(' ').append(attr(\"systemId\")).append(\"\\\"\");"
      },
      {
        "txt": "accum.append('>'); } @Override void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) { }"
      }
    ]
  },
  {
    "id": 1897,
    "file_path": "src/main/java/org/jsoup/nodes/DocumentType.java",
    "start-bug-line": 33,
    "end-bug-line": 33,
    "bug": "accum.append(\"<!DOCTYPE html\");",
    "fix": "accum.append(\"<!DOCTYPE \").append(attr(\"name\"));",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.jsoup.nodes; import org.jsoup.helper.StringUtil; public class DocumentType extends Node { public DocumentType(String name, String publicId, String systemId, String baseUri) { super(baseUri); attr(\"name\", name); attr(\"publicId\", publicId); attr(\"systemId\", systemId);"
      },
      {
        "txt": "@Override public String nodeName() { return \"#doctype\"; } @Override void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) { <extra_id_0> if (!StringUtil.isBlank(attr(\"publicId\"))) accum.append(\" PUBLIC \\\"\").append(attr(\"publicId\")).append(\"\\\"\"); if (!StringUtil.isBlank(attr(\"systemId\"))) accum.append(' ').append(attr(\"systemId\")).append(\"\\\"\"); accum.append('>'); }"
      },
      {
        "txt": "accum.append('>'); } @Override void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) { }"
      }
    ]
  },
  {
    "id": 1898,
    "file_path": "src/main/java/org/jsoup/nodes/DocumentType.java",
    "start-bug-line": 37,
    "end-bug-line": 37,
    "bug": "accum.append(' ').append(attr(\"systemId\")).append(\"\\\"\");",
    "fix": "accum.append(\" \\\"\").append(attr(\"systemId\")).append(\"\\\"\");",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.jsoup.nodes; import org.jsoup.helper.StringUtil;"
      },
      {
        "txt": "public class DocumentType extends Node { public DocumentType(String name, String publicId, String systemId, String baseUri) { super(baseUri); attr(\"name\", name); attr(\"publicId\", publicId); attr(\"systemId\", systemId); } @Override public String nodeName() { return \"#doctype\";"
      },
      {
        "txt": "@Override void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) { accum.append(\"<!DOCTYPE html\"); if (!StringUtil.isBlank(attr(\"publicId\"))) accum.append(\" PUBLIC \\\"\").append(attr(\"publicId\")).append(\"\\\"\"); if (!StringUtil.isBlank(attr(\"systemId\"))) <extra_id_0> accum.append('>'); } @Override void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) { } }"
      }
    ]
  }
]