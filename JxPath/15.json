[
  {
    "id": 2245,
    "file_path": "src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java",
    "start-bug-line": 20,
    "end-bug-line": 20,
    "bug": "",
    "fix": "import java.util.Iterator;",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.apache.commons.jxpath.ri.axes; import java.util.ArrayList; <extra_id_0> import org.apache.commons.jxpath.BasicNodeSet; import org.apache.commons.jxpath.ri.EvalContext; import org.apache.commons.jxpath.ri.model.NodePointer; public class UnionContext extends NodeSetContext { private EvalContext contexts[]; private boolean prepared;"
      },
      {
        "txt": "private EvalContext contexts[]; private boolean prepared; public UnionContext(EvalContext parentContext, EvalContext contexts[]) { super(parentContext, new BasicNodeSet()); this.contexts = contexts; } public int getDocumentOrder() { return contexts.length > 1 ? 1 : super.getDocumentOrder(); } public boolean setPosition(int position) {"
      },
      {
        "txt": "if (!prepared) { prepared = true; BasicNodeSet nodeSet = (BasicNodeSet) getNodeSet(); ArrayList pointers = new ArrayList(); for (int i = 0; i < contexts.length; i++) { EvalContext ctx = (EvalContext) contexts[i]; while (ctx.nextSet()) { while (ctx.nextNode()) { NodePointer ptr = ctx.getCurrentNodePointer(); if (!pointers.contains(ptr)) {"
      },
      {
        "txt": "nodeSet.add(ptr); pointers.add(ptr); } } } } } return super.setPosition(position); }"
      }
    ]
  },
  {
    "id": 2246,
    "file_path": "src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java",
    "start-bug-line": 22,
    "end-bug-line": 22,
    "bug": "",
    "fix": "import org.apache.commons.jxpath.Pointer;",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.apache.commons.jxpath.ri.axes; import java.util.ArrayList; import org.apache.commons.jxpath.BasicNodeSet; <extra_id_0> import org.apache.commons.jxpath.ri.model.NodePointer; public class UnionContext extends NodeSetContext { private EvalContext contexts[]; private boolean prepared; public UnionContext(EvalContext parentContext, EvalContext contexts[]) { super(parentContext, new BasicNodeSet());"
      },
      {
        "txt": "public UnionContext(EvalContext parentContext, EvalContext contexts[]) { super(parentContext, new BasicNodeSet()); this.contexts = contexts; } public int getDocumentOrder() { return contexts.length > 1 ? 1 : super.getDocumentOrder(); } public boolean setPosition(int position) { if (!prepared) { prepared = true;"
      },
      {
        "txt": "BasicNodeSet nodeSet = (BasicNodeSet) getNodeSet(); ArrayList pointers = new ArrayList(); for (int i = 0; i < contexts.length; i++) { EvalContext ctx = (EvalContext) contexts[i]; while (ctx.nextSet()) { while (ctx.nextNode()) { NodePointer ptr = ctx.getCurrentNodePointer(); if (!pointers.contains(ptr)) { nodeSet.add(ptr); pointers.add(ptr);"
      },
      {
        "txt": "} } } } } return super.setPosition(position); }"
      }
    ]
  },
  {
    "id": 2247,
    "file_path": "src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java",
    "start-bug-line": 56,
    "end-bug-line": 56,
    "bug": "nodeSet.add(ptr);",
    "fix": "[Delete]",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.apache.commons.jxpath.ri.axes; import java.util.ArrayList; import org.apache.commons.jxpath.BasicNodeSet; import org.apache.commons.jxpath.ri.EvalContext; import org.apache.commons.jxpath.ri.model.NodePointer; public class UnionContext extends NodeSetContext { private EvalContext contexts[]; private boolean prepared; public UnionContext(EvalContext parentContext, EvalContext contexts[]) {"
      },
      {
        "txt": "super(parentContext, new BasicNodeSet()); this.contexts = contexts; } public int getDocumentOrder() { return contexts.length > 1 ? 1 : super.getDocumentOrder(); } public boolean setPosition(int position) { if (!prepared) { prepared = true; BasicNodeSet nodeSet = (BasicNodeSet) getNodeSet();"
      },
      {
        "txt": "for (int i = 0; i < contexts.length; i++) { EvalContext ctx = (EvalContext) contexts[i]; while (ctx.nextSet()) { while (ctx.nextNode()) { NodePointer ptr = ctx.getCurrentNodePointer(); if (!pointers.contains(ptr)) { <extra_id_0> pointers.add(ptr); } } } } }"
      },
      {
        "txt": "} } return super.setPosition(position); }"
      }
    ]
  },
  {
    "id": 2248,
    "file_path": "src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java",
    "start-bug-line": 62,
    "end-bug-line": 62,
    "bug": "",
    "fix": "sortPointers(pointers);  for (Iterator it = pointers.iterator(); it.hasNext();) { nodeSet.add((Pointer) it.next()); }",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.apache.commons.jxpath.ri.axes; import java.util.ArrayList; import org.apache.commons.jxpath.BasicNodeSet; import org.apache.commons.jxpath.ri.EvalContext; import org.apache.commons.jxpath.ri.model.NodePointer;"
      },
      {
        "txt": "public class UnionContext extends NodeSetContext { private EvalContext contexts[]; private boolean prepared; public UnionContext(EvalContext parentContext, EvalContext contexts[]) { super(parentContext, new BasicNodeSet()); this.contexts = contexts; } public int getDocumentOrder() { return contexts.length > 1 ? 1 : super.getDocumentOrder(); }"
      },
      {
        "txt": "public boolean setPosition(int position) { if (!prepared) { prepared = true; BasicNodeSet nodeSet = (BasicNodeSet) getNodeSet(); ArrayList pointers = new ArrayList(); for (int i = 0; i < contexts.length; i++) { EvalContext ctx = (EvalContext) contexts[i]; while (ctx.nextSet()) { while (ctx.nextNode()) { NodePointer ptr = ctx.getCurrentNodePointer();"
      },
      {
        "txt": "nodeSet.add(ptr); pointers.add(ptr); } } } } <extra_id_0> return super.setPosition(position); } }"
      }
    ]
  },
  {
    "id": 2249,
    "file_path": "src/java/org/apache/commons/jxpath/ri/axes/UnionContext.java",
    "start-bug-line": 65,
    "end-bug-line": 65,
    "bug": "",
    "fix": "}",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.apache.commons.jxpath.ri.axes; import java.util.ArrayList; import org.apache.commons.jxpath.BasicNodeSet; import org.apache.commons.jxpath.ri.EvalContext; import org.apache.commons.jxpath.ri.model.NodePointer; public class UnionContext extends NodeSetContext { private EvalContext contexts[]; private boolean prepared;"
      },
      {
        "txt": "public UnionContext(EvalContext parentContext, EvalContext contexts[]) { super(parentContext, new BasicNodeSet()); this.contexts = contexts; } public int getDocumentOrder() { return contexts.length > 1 ? 1 : super.getDocumentOrder(); } public boolean setPosition(int position) { if (!prepared) { prepared = true;"
      },
      {
        "txt": "BasicNodeSet nodeSet = (BasicNodeSet) getNodeSet(); ArrayList pointers = new ArrayList(); for (int i = 0; i < contexts.length; i++) { EvalContext ctx = (EvalContext) contexts[i]; while (ctx.nextSet()) { while (ctx.nextNode()) { NodePointer ptr = ctx.getCurrentNodePointer(); if (!pointers.contains(ptr)) { nodeSet.add(ptr); pointers.add(ptr);"
      },
      {
        "txt": "} } } } return super.setPosition(position); } <extra_id_0>"
      }
    ]
  }
]