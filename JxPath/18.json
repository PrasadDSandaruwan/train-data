[
  {
    "id": 2261,
    "file_path": "src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java",
    "start-bug-line": 19,
    "end-bug-line": 19,
    "bug": "",
    "fix": "import org.apache.commons.jxpath.ri.Compiler;",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.apache.commons.jxpath.ri.axes; <extra_id_0> import org.apache.commons.jxpath.ri.QName; import org.apache.commons.jxpath.ri.compiler.NodeNameTest; import org.apache.commons.jxpath.ri.compiler.NodeTest; import org.apache.commons.jxpath.ri.model.NodeIterator; import org.apache.commons.jxpath.ri.model.NodePointer; public class AttributeContext extends EvalContext {"
      },
      {
        "txt": "import org.apache.commons.jxpath.ri.model.NodePointer; public class AttributeContext extends EvalContext { private NodeTest nodeTest; private boolean setStarted = false; private NodeIterator iterator; private NodePointer currentNodePointer; public AttributeContext(EvalContext parentContext, NodeTest nodeTest) { super(parentContext); this.nodeTest = nodeTest; }"
      },
      {
        "txt": "public NodePointer getCurrentNodePointer() { return currentNodePointer; } public void reset() { setStarted = false; iterator = null; super.reset(); } public boolean setPosition(int position) { if (position < getCurrentPosition()) {"
      },
      {
        "txt": "reset(); } while (getCurrentPosition() < position) { if (!nextNode()) { return false; } } return true; } public boolean nextNode() {"
      },
      {
        "txt": "super.setPosition(getCurrentPosition() + 1); if (!setStarted) { setStarted = true; if (!(nodeTest instanceof NodeNameTest)) { return false; } QName name = ((NodeNameTest) nodeTest).getNodeName(); iterator = parentContext.getCurrentNodePointer().attributeIterator(name); }"
      },
      {
        "txt": "if (iterator == null) { return false; } if (!iterator.setPosition(iterator.getPosition() + 1)) { return false; } currentNodePointer = iterator.getNodePointer(); return true; }"
      }
    ]
  },
  {
    "id": 2262,
    "file_path": "src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java",
    "start-bug-line": 23,
    "end-bug-line": 23,
    "bug": "",
    "fix": "import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.apache.commons.jxpath.ri.axes; import org.apache.commons.jxpath.ri.EvalContext; import org.apache.commons.jxpath.ri.QName; import org.apache.commons.jxpath.ri.compiler.NodeNameTest; import org.apache.commons.jxpath.ri.compiler.NodeTest; <extra_id_0> import org.apache.commons.jxpath.ri.model.NodePointer; public class AttributeContext extends EvalContext { private NodeTest nodeTest; private boolean setStarted = false; private NodeIterator iterator; private NodePointer currentNodePointer;"
      },
      {
        "txt": "private NodeIterator iterator; private NodePointer currentNodePointer; public AttributeContext(EvalContext parentContext, NodeTest nodeTest) { super(parentContext); this.nodeTest = nodeTest; } public NodePointer getCurrentNodePointer() { return currentNodePointer; } public void reset() {"
      },
      {
        "txt": "setStarted = false; iterator = null; super.reset(); } public boolean setPosition(int position) { if (position < getCurrentPosition()) { reset(); } while (getCurrentPosition() < position) { if (!nextNode()) {"
      },
      {
        "txt": "return false; } } return true; } public boolean nextNode() { super.setPosition(getCurrentPosition() + 1); if (!setStarted) { setStarted = true; if (!(nodeTest instanceof NodeNameTest)) {"
      },
      {
        "txt": "return false; } QName name = ((NodeNameTest) nodeTest).getNodeName(); iterator = parentContext.getCurrentNodePointer().attributeIterator(name); } if (iterator == null) { return false; } if (!iterator.setPosition(iterator.getPosition() + 1)) {"
      },
      {
        "txt": "return false; } currentNodePointer = iterator.getNodePointer(); return true; }"
      }
    ]
  },
  {
    "id": 2263,
    "file_path": "src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java",
    "start-bug-line": 33,
    "end-bug-line": 33,
    "bug": "",
    "fix": "private static final NodeNameTest WILDCARD_TEST = new NodeNameTest(new QName(null, \"*\"));",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "import org.apache.commons.jxpath.ri.QName; import org.apache.commons.jxpath.ri.compiler.NodeNameTest; import org.apache.commons.jxpath.ri.compiler.NodeTest; import org.apache.commons.jxpath.ri.model.NodeIterator; import org.apache.commons.jxpath.ri.model.NodePointer; public class AttributeContext extends EvalContext { <extra_id_0> private NodeTest nodeTest; private boolean setStarted = false; private NodeIterator iterator; private NodePointer currentNodePointer; public AttributeContext(EvalContext parentContext, NodeTest nodeTest) { super(parentContext);"
      },
      {
        "txt": "public AttributeContext(EvalContext parentContext, NodeTest nodeTest) { super(parentContext); this.nodeTest = nodeTest; } public NodePointer getCurrentNodePointer() { return currentNodePointer; } public void reset() { setStarted = false; iterator = null;"
      },
      {
        "txt": "super.reset(); } public boolean setPosition(int position) { if (position < getCurrentPosition()) { reset(); } while (getCurrentPosition() < position) { if (!nextNode()) { return false; }"
      },
      {
        "txt": "} return true; } public boolean nextNode() { super.setPosition(getCurrentPosition() + 1); if (!setStarted) { setStarted = true; if (!(nodeTest instanceof NodeNameTest)) { return false; }"
      },
      {
        "txt": "QName name = ((NodeNameTest) nodeTest).getNodeName(); iterator = parentContext.getCurrentNodePointer().attributeIterator(name); } if (iterator == null) { return false; } if (!iterator.setPosition(iterator.getPosition() + 1)) { return false; }"
      },
      {
        "txt": "currentNodePointer = iterator.getNodePointer(); return true; }"
      }
    ]
  },
  {
    "id": 2264,
    "file_path": "src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java",
    "start-bug-line": 75,
    "end-bug-line": 75,
    "bug": "if (!(nodeTest instanceof NodeNameTest)) {",
    "fix": "NodeNameTest nodeNameTest = null; if (nodeTest instanceof NodeTypeTest) { if (((NodeTypeTest) nodeTest).getNodeType() == Compiler.NODE_TYPE_NODE) { nodeNameTest = WILDCARD_TEST; } } else if (nodeTest instanceof NodeNameTest) { nodeNameTest = (NodeNameTest) nodeTest; } if (nodeNameTest == null) {",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.apache.commons.jxpath.ri.axes; import org.apache.commons.jxpath.ri.EvalContext;"
      },
      {
        "txt": "import org.apache.commons.jxpath.ri.QName; import org.apache.commons.jxpath.ri.compiler.NodeNameTest; import org.apache.commons.jxpath.ri.compiler.NodeTest; import org.apache.commons.jxpath.ri.model.NodeIterator; import org.apache.commons.jxpath.ri.model.NodePointer; public class AttributeContext extends EvalContext { private NodeTest nodeTest; private boolean setStarted = false; private NodeIterator iterator; private NodePointer currentNodePointer;"
      },
      {
        "txt": "public AttributeContext(EvalContext parentContext, NodeTest nodeTest) { super(parentContext); this.nodeTest = nodeTest; } public NodePointer getCurrentNodePointer() { return currentNodePointer; } public void reset() { setStarted = false; iterator = null;"
      },
      {
        "txt": "super.reset(); } public boolean setPosition(int position) { if (position < getCurrentPosition()) { reset(); } while (getCurrentPosition() < position) { if (!nextNode()) { return false; }"
      },
      {
        "txt": "return true; } public boolean nextNode() { super.setPosition(getCurrentPosition() + 1); if (!setStarted) { setStarted = true; <extra_id_0> return false; } QName name = ((NodeNameTest) nodeTest).getNodeName(); iterator = parentContext.getCurrentNodePointer().attributeIterator(name); }"
      },
      {
        "txt": "parentContext.getCurrentNodePointer().attributeIterator(name); } if (iterator == null) { return false; } if (!iterator.setPosition(iterator.getPosition() + 1)) { return false; } currentNodePointer = iterator.getNodePointer(); return true;"
      }
    ]
  },
  {
    "id": 2265,
    "file_path": "src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java",
    "start-bug-line": 78,
    "end-bug-line": 80,
    "bug": "QName name = ((NodeNameTest) nodeTest).getNodeName(); iterator = parentContext.getCurrentNodePointer().attributeIterator(name);",
    "fix": "iterator = parentContext.getCurrentNodePointer().attributeIterator( nodeNameTest.getNodeName());",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.apache.commons.jxpath.ri.axes; import org.apache.commons.jxpath.ri.EvalContext; import org.apache.commons.jxpath.ri.QName; import org.apache.commons.jxpath.ri.compiler.NodeNameTest; import org.apache.commons.jxpath.ri.compiler.NodeTest;"
      },
      {
        "txt": "import org.apache.commons.jxpath.ri.model.NodeIterator; import org.apache.commons.jxpath.ri.model.NodePointer; public class AttributeContext extends EvalContext { private NodeTest nodeTest; private boolean setStarted = false; private NodeIterator iterator; private NodePointer currentNodePointer; public AttributeContext(EvalContext parentContext, NodeTest nodeTest) { super(parentContext); this.nodeTest = nodeTest;"
      },
      {
        "txt": "} public NodePointer getCurrentNodePointer() { return currentNodePointer; } public void reset() { setStarted = false; iterator = null; super.reset(); } public boolean setPosition(int position) {"
      },
      {
        "txt": "if (position < getCurrentPosition()) { reset(); } while (getCurrentPosition() < position) { if (!nextNode()) { return false; } } return true; }"
      },
      {
        "txt": "super.setPosition(getCurrentPosition() + 1); if (!setStarted) { setStarted = true; if (!(nodeTest instanceof NodeNameTest)) { return false; } <extra_id_0> } if (iterator == null) { return false; } if (!iterator.setPosition(iterator.getPosition() + 1)) { return false;"
      },
      {
        "txt": "if (!iterator.setPosition(iterator.getPosition() + 1)) { return false; } currentNodePointer = iterator.getNodePointer(); return true; }"
      }
    ]
  },
  {
    "id": 2266,
    "file_path": "src/java/org/apache/commons/jxpath/ri/axes/AttributeContext.java",
    "start-bug-line": 91,
    "end-bug-line": 91,
    "bug": "",
    "fix": "}",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.apache.commons.jxpath.ri.axes; import org.apache.commons.jxpath.ri.EvalContext; import org.apache.commons.jxpath.ri.QName; import org.apache.commons.jxpath.ri.compiler.NodeNameTest; import org.apache.commons.jxpath.ri.compiler.NodeTest; import org.apache.commons.jxpath.ri.model.NodeIterator; import org.apache.commons.jxpath.ri.model.NodePointer; public class AttributeContext extends EvalContext {"
      },
      {
        "txt": "private NodeTest nodeTest; private boolean setStarted = false; private NodeIterator iterator; private NodePointer currentNodePointer; public AttributeContext(EvalContext parentContext, NodeTest nodeTest) { super(parentContext); this.nodeTest = nodeTest; } public NodePointer getCurrentNodePointer() { return currentNodePointer;"
      },
      {
        "txt": "} public void reset() { setStarted = false; iterator = null; super.reset(); } public boolean setPosition(int position) { if (position < getCurrentPosition()) { reset(); }"
      },
      {
        "txt": "while (getCurrentPosition() < position) { if (!nextNode()) { return false; } } return true; } public boolean nextNode() { super.setPosition(getCurrentPosition() + 1); if (!setStarted) {"
      },
      {
        "txt": "setStarted = true; if (!(nodeTest instanceof NodeNameTest)) { return false; } QName name = ((NodeNameTest) nodeTest).getNodeName(); iterator = parentContext.getCurrentNodePointer().attributeIterator(name); } if (iterator == null) { return false;"
      },
      {
        "txt": "if (!iterator.setPosition(iterator.getPosition() + 1)) { return false; } currentNodePointer = iterator.getNodePointer(); return true; } <extra_id_0>"
      }
    ]
  }
]