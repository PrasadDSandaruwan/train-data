[
  {
    "id": 2649,
    "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java",
    "start-bug-line": 72,
    "end-bug-line": 72,
    "bug": "return solve(min, max);",
    "fix": "return solve(f, min, max);",
    "fixes": [],
    "err": "",
    "ctxs": [
      {
        "txt": "package org.apache.commons.math.analysis.solvers; import org.apache.commons.math.FunctionEvaluationException; import org.apache.commons.math.MaxIterationsExceededException; import org.apache.commons.math.analysis.UnivariateRealFunction; public class BisectionSolver extends UnivariateRealSolverImpl { @Deprecated public BisectionSolver(UnivariateRealFunction f) {"
      },
      {
        "txt": "super(f, 100, 1E-6); } public BisectionSolver() { super(100, 1E-6); } @Deprecated public double solve(double min, double max, double initial) throws MaxIterationsExceededException, FunctionEvaluationException { return solve(f, min, max); }"
      },
      {
        "txt": "public double solve(double min, double max) throws MaxIterationsExceededException, FunctionEvaluationException { return solve(f, min, max); } public double solve(final UnivariateRealFunction f, double min, double max, double initial) throws MaxIterationsExceededException, FunctionEvaluationException { <extra_id_0> } public double solve(final UnivariateRealFunction f, double min, double max) throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); verifyInterval(min,max); double m;"
      },
      {
        "txt": "verifyInterval(min,max); double m; double fm; double fmin; int i = 0; while (i < maximalIterationCount) { m = UnivariateRealSolverUtils.midpoint(min, max); fmin = f.value(min); fm = f.value(m); if (fm * fmin > 0.0) {"
      },
      {
        "txt": "min = m; } else { max = m; } if (Math.abs(max - min) <= absoluteAccuracy) { m = UnivariateRealSolverUtils.midpoint(min, max); setResult(m, i); return m; } ++i;"
      },
      {
        "txt": "} throw new MaxIterationsExceededException(maximalIterationCount); }"
      }
    ]
  }
]